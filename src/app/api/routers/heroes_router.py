from fastapi import APIRouter, HTTPException

from src.app.dependencies.dependencies import ServiceDep

from src.app.pydantic_models.models import HeroSchema, HeroResponse, HeroDep

router = APIRouter(prefix='/hero', tags=["–ì–µ—Ä–æ–∏ ü¶π"])


@router.post("/", summary="C–æ—Ö—Ä–∞–Ω–∏—Ç—å –≥–µ—Ä–æ—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Öü¶π‚¨áÔ∏è", )
async def save_hero(name: str, service: ServiceDep) -> HeroResponse:
    hero = await service.save_hero(name)
    if hero is None:
        raise HTTPException(status_code=404, detail="–ì–µ—Ä–æ–π –Ω–µ –Ω–∞–π–¥–µ–Ω. –í–æ–∑–º–æ–∂–Ω–æ —Ç–∞–∫–æ–≥–æ –≥–µ—Ä–æ—è –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")
    return hero


@router.get("/", summary="–ü–æ–ª—É—á–∏—Ç—å –≥–µ—Ä–æ–µ–≤ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –ø–æ –∑–∞–¥–∞–Ω–Ω—ã–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ü¶π‚¨ÜÔ∏è")
async def get_hero(hero: HeroDep, service: ServiceDep) -> list[HeroResponse]:
    heroes = await service.get_heroes(hero)
    if not heroes or heroes is None:
        raise HTTPException(status_code=404, detail='–ì–µ—Ä–æ–µ–≤ —Å —Ç–∞–∫–∏–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –Ω–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.')
    return heroes